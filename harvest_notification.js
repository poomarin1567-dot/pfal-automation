// ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
const { Pool } = require('pg');

const pool = new Pool({
  host: '192.168.20.50',
  port: 5432,
  user: 'postgres',
  password: '123456',
  database: 'pfal'
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î
async function validateHarvestDate(req, res, next) {
  try {
    const { tray_id, action_type, reason } = req.body;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£ outbound
    if (action_type === 'outbound' && tray_id) {
      const result = await pool.query(`
        SELECT 
          ti.tray_id,
          ti.veg_type,
          ti.time_in,
          pp.harvest_date,
          pp.plant_date,
          pp.plan_id,
          -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤
          EXTRACT(EPOCH FROM (NOW() - ti.time_in)) / 86400 as days_planted,
          -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏Å‡πá‡∏ö
          EXTRACT(EPOCH FROM (pp.harvest_date - NOW())) / 86400 as days_before_harvest
        FROM tray_inventory ti
        LEFT JOIN planting_plans pp ON ti.planting_plan_id = pp.id
        WHERE ti.tray_id = $1
      `, [tray_id]);
      
      if (result.rows.length > 0) {
        const tray = result.rows[0];
        const daysBeforeHarvest = Math.floor(tray.days_before_harvest);
        const daysPlanted = Math.floor(tray.days_planted);
        
        // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏ß‡∏±‡∏ô
        if (daysBeforeHarvest > 2) {
          return res.status(400).json({
            error: 'early_harvest_warning',
            message: `‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î`,
            details: {
              tray_id: tray.tray_id,
              vegetable: tray.veg_type,
              plan_id: tray.plan_id,
              harvest_date: tray.harvest_date,
              days_planted: daysPlanted,
              days_before_harvest: daysBeforeHarvest,
              warning_message: `‡∏ñ‡∏≤‡∏î ${tray.tray_id} (${tray.veg_type}) ‡∏õ‡∏•‡∏π‡∏Å‡∏°‡∏≤ ${daysPlanted} ‡∏ß‡∏±‡∏ô ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß (‡∏≠‡∏µ‡∏Å ${daysBeforeHarvest} ‡∏ß‡∏±‡∏ô)`
            },
            confirm_required: true
          });
        }
        
        // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏õ‡∏•‡∏π‡∏Å‡πÑ‡∏°‡πà‡∏ô‡∏≤‡∏ô (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 7 ‡∏ß‡∏±‡∏ô)
        if (daysPlanted < 7) {
          return res.status(400).json({
            error: 'too_early_harvest',
            message: `üö® ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ`,
            details: {
              tray_id: tray.tray_id,
              vegetable: tray.veg_type,
              days_planted: daysPlanted,
              warning_message: `‡∏ñ‡∏≤‡∏î ${tray.tray_id} (${tray.veg_type}) ‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏õ‡∏•‡∏π‡∏Å ${daysPlanted} ‡∏ß‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏£‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏ï‡∏Å‡πà‡∏≠‡∏ô`
            },
            confirm_required: true
          });
        }
      }
    }
    
    next(); // ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
  } catch (err) {
    console.error('‚ùå Harvest validation error:', err.message);
    next(); // ‡πÉ‡∏´‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÅ‡∏°‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
  }
}

module.exports = {
  validateHarvestDate,
  pool
};