const { Pool } = require('pg');
const pool = new Pool({
  host: '192.168.20.50',
  port: 5432,
  user: 'postgres',
  password: '123456',
  database: 'pfal'
});

async function findRealOutboundData() {
  const client = await pool.connect();
  try {
    console.log('üîç ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• outbound ‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà...');
    
    // ‡∏´‡∏≤ task_monitor ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô outbound ‡πÅ‡∏•‡∏∞ success
    const outboundTasks = await client.query(`
      SELECT tray_id, floor, slot, username, created_at, completed_at
      FROM task_monitor 
      WHERE action_type = 'outbound' AND status = 'success'
      ORDER BY completed_at DESC
      LIMIT 10
    `);
    
    console.log(`üì§ ‡∏û‡∏ö outbound tasks: ${outboundTasks.rows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    outboundTasks.rows.forEach(task => {
      console.log(`- Tray ${task.tray_id}: ‡∏ä‡∏±‡πâ‡∏ô ${task.floor}, ‡∏ä‡πà‡∏≠‡∏á ${task.slot} ‡πÇ‡∏î‡∏¢ ${task.username} (${task.completed_at})`);
    });
    
    // ‡∏´‡∏≤ tray ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô tray_inventory)
    const removedTrays = await client.query(`
      SELECT DISTINCT tm.tray_id, tm.floor, tm.slot, tm.username, tm.completed_at
      FROM task_monitor tm
      WHERE tm.action_type = 'outbound' 
        AND tm.status = 'success'
        AND tm.tray_id NOT IN (SELECT tray_id FROM tray_inventory WHERE tray_id IS NOT NULL)
      ORDER BY tm.completed_at DESC
      LIMIT 5
    `);
    
    console.log(`\nüóëÔ∏è ‡∏ñ‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô inventory): ${removedTrays.rows.length} ‡∏ñ‡∏≤‡∏î`);
    removedTrays.rows.forEach(tray => {
      console.log(`- ${tray.tray_id}: ‡∏ä‡∏±‡πâ‡∏ô ${tray.floor}, ‡∏ä‡πà‡∏≠‡∏á ${tray.slot} ‡πÇ‡∏î‡∏¢ ${tray.username}`);
    });
    
    // ‡∏´‡∏≤ planting plan ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ tray ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ (‡∏à‡∏≤‡∏Å history)
    if (outboundTasks.rows.length > 0) {
      console.log('\nüîó ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö outbound tasks...');
      
      // ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà: ‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const planOutboundMapping = await client.query(`
        SELECT DISTINCT
          pp.id, pp.plan_id, pp.vegetable_type, pp.status, pp.completed_by,
          tm.tray_id, tm.floor, tm.slot, tm.username, tm.completed_at
        FROM planting_plans pp,
             task_monitor tm
        WHERE pp.status = 'completed'
          AND tm.action_type = 'outbound'
          AND tm.status = 'success'
        ORDER BY pp.id, tm.completed_at DESC
        LIMIT 10
      `);
      
      console.log(`üìã ‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á: ${planOutboundMapping.rows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      planOutboundMapping.rows.forEach(row => {
        console.log(`- Plan ${row.plan_id} (${row.vegetable_type}): Tray ${row.tray_id} ‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏±‡πâ‡∏ô ${row.floor}, ‡∏ä‡πà‡∏≠‡∏á ${row.slot} ‡πÇ‡∏î‡∏¢ ${row.username}`);
      });
    }
    
  } catch (err) {
    console.error('Error:', err.message);
  } finally {
    client.release();
    await pool.end();
  }
}

findRealOutboundData();